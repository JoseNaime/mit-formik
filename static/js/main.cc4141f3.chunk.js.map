{"version":3,"sources":["App.js","index.js"],"names":["App","className","initialValues","email","password","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","alert","touched","handleChange","handleBlur","handleSubmit","isSubmitting","htmlFor","id","type","name","onChange","onBlur","value","disabled","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA6EeA,MA1Ef,WACI,OACI,qBAAKC,UAAU,aAAf,SACI,8BACI,cAAC,IAAD,CACIC,cAAe,CAACC,MAAO,GAAIC,SAAU,IACrCC,SAAU,SAAAC,GACN,IAAMC,EAAS,GAYf,OAXKD,EAAOH,MAGP,2CAA2CK,KAAKF,EAAOH,SAExDI,EAAOJ,MAAQ,yBAJfI,EAAOJ,MAAQ,iBAOdG,EAAOF,WACRG,EAAOH,SAAW,kBAEfG,GAEXE,SAAU,SAACH,EAAD,GAA8B,IAApBI,EAAmB,EAAnBA,cAChBC,YAAW,WACPC,MAAM,qBACNF,GAAc,KACf,MArBX,SAwBK,gBACKJ,EADL,EACKA,OACAC,EAFL,EAEKA,OACAM,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,WACAC,EANL,EAMKA,aACAC,EAPL,EAOKA,aAPL,OASG,eAAC,IAAD,CAAMR,SAAUO,EAAhB,UACI,uCACA,gCACI,uBAAOE,QAAQ,QAAf,mBACA,cAAC,IAAD,CACIC,GAAI,aACJC,KAAK,QACLC,KAAK,QACLC,SAAUR,EACVS,OAAQR,EACRS,MAAOlB,EAAOH,QAElB,uBAAOgB,GAAG,aAAV,SAAwBZ,EAAOJ,OAASU,EAAQV,OAASI,EAAOJ,WAEpE,gCACI,uBAAOe,QAAQ,WAAf,sBACA,cAAC,IAAD,CACIC,GAAI,WACJC,KAAK,WACLC,KAAK,WACLC,SAAUR,EACVS,OAAQR,EACRS,MAAOlB,EAAOF,WAElB,uBAAOe,GAAG,WAAV,SAAsBZ,EAAOH,UAAYS,EAAQT,UAAYG,EAAOH,cAExE,wBAAQe,GAAG,YAAYC,KAAK,SAASK,SAAUR,EAA/C,+BC7D5BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc4141f3.chunk.js","sourcesContent":["import './App.css';\nimport {Formik, Field, Form} from 'formik';\n\nfunction App() {\n    return (\n        <div className=\"background\">\n            <div>\n                <Formik\n                    initialValues={{email: '', password: ''}}\n                    validate={values => {\n                        const errors = {};\n                        if (!values.email) {\n                            errors.email = 'Field Required';\n                        } else if (\n                            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                        ) {\n                            errors.email = 'Invalid email address';\n                        }\n\n                        if (!values.password) {\n                            errors.password = 'Field Required';\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, {setSubmitting}) => {\n                        setTimeout(() => {\n                            alert(\"Login successful!\");\n                            setSubmitting(false);\n                        }, 400);\n                    }}\n                >\n                    {({\n                          values,\n                          errors,\n                          touched,\n                          handleChange,\n                          handleBlur,\n                          handleSubmit,\n                          isSubmitting,\n                      }) => (\n                        <Form onSubmit={handleSubmit}>\n                            <h1>Login</h1>\n                            <div>\n                                <label htmlFor=\"email\">Email</label>\n                                <Field\n                                    id={\"emailField\"}\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.email}\n                                />\n                                <aside id=\"emailError\">{errors.email && touched.email && errors.email}</aside>\n                            </div>\n                            <div>\n                                <label htmlFor=\"password\">Password</label>\n                                <Field\n                                    id={\"pswField\"}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                />\n                                <aside id=\"pswError\">{errors.password && touched.password && errors.password}</aside>\n                            </div>\n                            <button id=\"submitBtn\" type=\"submit\" disabled={isSubmitting}>\n                                Submit\n                            </button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}